:javascript
  $(document).ready(function(){
    // Create variables (in this scope) to hold the API and image size
    var jcrop_api, boundx, boundy;

    $('#cropbox').Jcrop({
      onChange: updatePreview,
      onSelect: updatePreview,
      aspectRatio: 1
    },function(){
      // Use the API to get the real image size
      var bounds = this.getBounds();
      boundx = bounds[0];
      boundy = bounds[1];
      // Store the API in the jcrop_api variable
      jcrop_api = this;
    });

    function updatePreview(c)
    {
      if (parseInt(c.w) > 0)
      {
        var rx = 100 / c.w;
        var ry = 100 / c.h;

        $('#preview').css({
          width: Math.round(rx * boundx) + 'px',
          height: Math.round(ry * boundy) + 'px',
          marginLeft: '-' + Math.round(rx * c.x) + 'px',
          marginTop: '-' + Math.round(ry * c.y) + 'px'
        });
      }
    };
  });

= image_tag @person.profile.avatar_url(:large), :id => "cropbox"

%h3
.preview
  = image_tag @person.profile.avatar_url(:large), :id => "preview"

= simple_form_for @person.profile, :as => :profile, :url => { :action => "crop_update" } do |f|
  - for attribute in [:crop_x, :crop_y, :crop_h, :crop_w]
    = f.hidden_field attribute, :id => attribute
  %p
    = f.submit t('action.crop')